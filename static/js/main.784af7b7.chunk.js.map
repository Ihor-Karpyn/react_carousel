{"version":3,"sources":["components/Сarousel/Carousel.js","components/СarouselSetting/СarouselSetting.jsx","App.js","index.js"],"names":["Carousel","state","moveIndex","showImage","props","roots","correctionImage","correctionMoveIndex","canClick","disabledBtn","setState","setTimeout","animationDuration","moveBack","step","infinite","imgNumber","length","currentMove","slice","moveForward","frameSize","maxMoveIndex","prevProps","this","itemWidth","frameStyle","width","height","imgStyle","listStyle","transition","transform","marginLeft","className","style","map","root","key","src","alt","type","onClick","cursor","disabled","React","Component","CarouselSetting","formList","id","event","target","checked","value","alert","Number","action","htmlFor","onChange","changeSetting","App","images","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.784af7b7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  state = {\n    moveIndex: 0,\n    showImage: this.props.roots,\n    correctionImage: 0,\n    correctionMoveIndex: 0,\n    canClick: true,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.infinite === true && this.props.infinite === false) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({\n        showImage: this.props.roots,\n        correctionImage: 0,\n        moveIndex: 0,\n        correctionMoveIndex: 0,\n      });\n    }\n  }\n\n  disabledBtn = () => {\n    this.setState({ canClick: false });\n    setTimeout(() => (\n      this.setState({ canClick: true })\n    ), this.props.animationDuration);\n  };\n\n  moveBack = () => {\n    const { step, roots, infinite } = this.props;\n    const imgNumber = roots.length;\n\n    this.disabledBtn();\n\n    this.setState((state) => {\n      const {\n        showImage,\n        correctionImage,\n        moveIndex,\n        correctionMoveIndex,\n      } = state;\n      let currentMove = moveIndex - step;\n\n      if (currentMove + correctionMoveIndex < 0 && infinite) {\n        return {\n          showImage: [\n            ...showImage.slice(imgNumber - step),\n            ...showImage.slice(0, imgNumber - step),\n          ],\n          moveIndex: moveIndex - step,\n          correctionImage: correctionImage - step,\n          correctionMoveIndex: correctionMoveIndex + step,\n        };\n      }\n\n      if (currentMove < 0 && !infinite) {\n        currentMove = 0;\n      }\n\n      return { moveIndex: currentMove };\n    });\n  };\n\n  moveForward = () => {\n    const { step, roots, frameSize, infinite } = this.props;\n    const imgNumber = roots.length;\n    const maxMoveIndex = imgNumber - frameSize;\n\n    this.disabledBtn();\n\n    this.setState((state) => {\n      const {\n        moveIndex,\n        correctionMoveIndex,\n        showImage,\n        correctionImage,\n      } = state;\n      let currentMove = moveIndex + step;\n\n      if (currentMove + correctionMoveIndex > maxMoveIndex && infinite) {\n        return {\n          showImage: [\n            ...showImage.slice(step),\n            ...showImage.slice(0, step),\n          ],\n          moveIndex: currentMove,\n          correctionImage: correctionImage + step,\n          correctionMoveIndex: correctionMoveIndex - step,\n        };\n      }\n\n      if (currentMove > maxMoveIndex && !infinite) {\n        currentMove = maxMoveIndex;\n      }\n\n      return { moveIndex: currentMove };\n    });\n  };\n\n  render() {\n    const { itemWidth, frameSize, animationDuration } = this.props;\n    const { moveIndex, showImage, correctionImage, canClick } = this.state;\n\n    const frameWidth = itemWidth * frameSize;\n    const frameStyle = {\n      width: `${frameWidth}px`,\n      height: `${itemWidth}px`,\n    };\n    const imgStyle = {\n      width: `${itemWidth}px`,\n    };\n    const listStyle = {\n      transition: `transform ${animationDuration}ms`,\n      transform: `translateX(${-(moveIndex * itemWidth)}px)`,\n      marginLeft: `${correctionImage * itemWidth}px`,\n    };\n\n    return (\n      <div className=\"carousel\">\n        <div\n          className=\"frame\"\n          style={frameStyle}\n        >\n          <ul\n            className=\"carousel_list\"\n            style={listStyle}\n          >\n            {showImage.map(root => (\n              <li key={root} className=\"carousel_item\">\n                <img\n                  src={root}\n                  alt=\"emoji\"\n                  className=\"carousel_img\"\n                  style={imgStyle}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"button_wrapper\">\n          {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.moveBack}\n            style={{ cursor: canClick ? 'pointer' : 'default' }}\n            disabled={!canClick}\n          >\n            👈\n          </button>\n          {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.moveForward}\n            style={{ cursor: canClick ? 'pointer' : 'default' }}\n            disabled={!canClick}\n          >\n            👉\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  itemWidth: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  step: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  infinite: PropTypes.bool.isRequired,\n  roots: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './СarouselSetting.scss';\nimport PropTypes from 'prop-types';\nimport Carousel from '../Сarousel/Carousel';\n\nclass CarouselSetting extends React.Component {\n  state = {\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  formList = [\n    {\n      id: 'itemWidth',\n    },\n    {\n      id: 'frameSize',\n    },\n    {\n      id: 'step',\n    },\n    {\n      id: 'animationDuration',\n    },\n  ];\n\n  changeSetting(event) {\n    const { id, checked, value, type } = event.target;\n    const { infinite } = this.state;\n\n    if (type !== 'checkbox' && infinite) {\n      alert(\"You can't change setting when infinite checked\");\n\n      return;\n    }\n\n    switch (id) {\n      case 'itemWidth':\n        if (value < 0 || value > 500) {\n          alert('max 500, min 0');\n\n          return;\n        }\n\n        break;\n\n      case 'frameSize':\n      case 'step':\n        if (value > 5) {\n          alert('max 5');\n\n          return;\n        }\n\n        break;\n\n      default:\n    }\n\n    if (event.target.id === 'infinite') {\n      this.setState({ [id]: checked });\n    } else {\n      this.setState({ [id]: Number(value) });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Carousel {...this.state} roots={this.props.roots} />\n        <form action=\"get\" className=\"form\">\n          {this.formList.map(({ id }) => (\n            <label htmlFor={id} className=\"label\" key={id}>\n              <span>\n                {id}\n                :\n              </span>\n              <input\n                className=\"input\"\n                id={id}\n                type=\"number\"\n                value={this.state[id] === 0 ? '' : this.state[id]}\n                onChange={event => this.changeSetting(event)}\n              />\n            </label>\n          ))}\n          <label htmlFor=\"infinite\" className=\"label\">\n            infinite :\n            <input\n              className=\"input\"\n              type=\"checkbox\"\n              id=\"infinite\"\n              onChange={event => this.changeSetting(event)}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nCarouselSetting.propTypes = {\n  roots: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default CarouselSetting;\n","import React from 'react';\nimport './App.scss';\n\nimport CarouselSetting from './components/СarouselSetting/СarouselSetting';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CarouselSetting roots={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}